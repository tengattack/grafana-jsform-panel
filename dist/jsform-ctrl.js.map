{"version":3,"sources":["../src/jsform-ctrl.js"],"names":["MetricsPanelCtrl","_","contextSrv","kbn","canvasRendering","JsformOptionsEditor","panelDefaults","jsonSchema","submitButtonText","submitConfirmMsg","formActionUrl","formContentType","ajaxCredentials","ajaxSuccessPath","ajaxFailurePath","uploadHandler","JSFormCtrl","$scope","$injector","$rootScope","timeSrv","variableSrv","onDataReceived","dataList","data","transformData","render","onInitEditMode","addEditorTab","unitFormats","getUnitFormats","onRender","onSubmit","events","emit","variableNames","map","variables","theme","user","lightTheme","defaultsDeep","panel","on","scope","elem","attrs","ctrl","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,sB,kBAAAA,gB;;AACFC,O;;AACEC,gB,gBAAAA,U;;AACFC,S;;AAEAC,qB;;AACEC,yB,kBAAAA,mB;;;;;;;;;;;;;;;;;;;;;AAIHC,mB,GAAgB;AACpBC,oBAAY,EADQ;AAEpBC,0BAAkB,QAFE;AAGpBC,0BAAkB,EAHE;AAIpBC,uBAAe,EAJK;AAKpBC,yBAAiB,YALG;AAMpBC,yBAAiB,KANG;AAOpBC,yBAAiB,MAPG;AAQpBC,yBAAiB,MARG;;AAUpBC,uBAAe;AAVK,O;;4BAaTC,U;;;AAGX,4BAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,UAA/B,EAA2CC,OAA3C,EAAoDC,WAApD,EAAiE;AAAA;;AAAA,8HACzDJ,MADyD,EACjDC,SADiD;;AAAA,gBAkBjEI,cAlBiE,GAkBhD,UAACC,QAAD,EAAc;AAC7B,kBAAKA,QAAL,GAAgBA,QAAhB;AACA,kBAAKC,IAAL,GAAY,MAAKC,aAAL,CAAmBF,QAAnB,CAAZ;AACA,kBAAKG,MAAL;AACD,WAtBgE;;AAAA,gBAwBjEC,cAxBiE,GAwBhD,YAAM;AACrB,kBAAKC,YAAL,CAAkB,SAAlB,EAA6BvB,mBAA7B,EAAkD,CAAlD;AACA,kBAAKwB,WAAL,GAAmB1B,IAAI2B,cAAJ,EAAnB;AACD,WA3BgE;;AAAA,gBA6BjEC,QA7BiE,GA6BtD,YAAM;AACf,gBAAI,CAAC,MAAKR,QAAV,EAAoB;AAAE;AAAS;AAC/B,kBAAKC,IAAL,GAAY,MAAKC,aAAL,CAAmB,MAAKF,QAAxB,CAAZ;AACD,WAhCgE;;AAAA,gBAkCjES,QAlCiE,GAkCtD,YAAM;AACf,kBAAKC,MAAL,CAAYC,IAAZ,CAAiB,QAAjB;AACD,WApCgE;;AAG/D,gBAAKX,QAAL,GAAgB,IAAhB;AACA,gBAAKC,IAAL,GAAY,EAAZ;AACA,gBAAKJ,OAAL,GAAeA,OAAf;AACA,gBAAKC,WAAL,GAAmBA,WAAnB;AACA,gBAAKc,aAAL,GAAqBlC,EAAEmC,GAAF,CAAMf,YAAYgB,SAAlB,EAA6B,MAA7B,CAArB;AACA,gBAAKC,KAAL,GAAapC,WAAWqC,IAAX,CAAgBC,UAAhB,GAA6B,OAA7B,GAAuC,MAApD;;AAEAvC,YAAEwC,YAAF,CAAe,MAAKC,KAApB,EAA2BpC,aAA3B;;AAEA,gBAAK2B,MAAL,CAAYU,EAAZ,CAAe,eAAf,EAAgC,MAAKrB,cAArC;AACA,gBAAKW,MAAL,CAAYU,EAAZ,CAAe,oBAAf,EAAqC,MAAKrB,cAA1C;AACA,gBAAKW,MAAL,CAAYU,EAAZ,CAAe,gBAAf,EAAiC,MAAKhB,cAAtC;AACA,gBAAKM,MAAL,CAAYU,EAAZ,CAAe,QAAf,EAAyB,MAAKZ,QAA9B;AAf+D;AAgBhE;;;;wCAsBaP,I,EAAM;AAClB,mBAAO,IAAP;AACD;;;+BAEIoB,K,EAAOC,I,EAAMC,K,EAAOC,I,EAAM;AAC7B3C,4BAAgBwC,KAAhB,EAAuBC,IAAvB,EAA6BC,KAA7B,EAAoCC,IAApC;AACD;;;6CAEkB;AACjB,iBAAKd,MAAL,CAAYC,IAAZ,CAAiB,oBAAjB;AACD;;;;QAnD6BlC,gB;;;;AAAnBgB,gB,CACJgC,W,GAAc,a","file":"jsform-ctrl.js","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport { contextSrv } from 'app/core/core';\nimport kbn from 'app/core/utils/kbn';\n\nimport canvasRendering from './canvas/rendering';\nimport { JsformOptionsEditor } from './options-editor';\nimport './css/jsform-panel.css!';\nimport './css/flatpickr.css!';\n\nconst panelDefaults = {\n  jsonSchema: '',\n  submitButtonText: 'Submit',\n  submitConfirmMsg: '',\n  formActionUrl: '',\n  formContentType: 'urlencoded',\n  ajaxCredentials: false,\n  ajaxSuccessPath: 'info',\n  ajaxFailurePath: 'info',\n\n  uploadHandler: '',\n};\n\nexport class JSFormCtrl extends MetricsPanelCtrl {\n  static templateUrl = 'module.html';\n\n  constructor($scope, $injector, $rootScope, timeSrv, variableSrv) {\n    super($scope, $injector);\n\n    this.dataList = null;\n    this.data = {};\n    this.timeSrv = timeSrv;\n    this.variableSrv = variableSrv;\n    this.variableNames = _.map(variableSrv.variables, 'name');\n    this.theme = contextSrv.user.lightTheme ? 'light' : 'dark';\n\n    _.defaultsDeep(this.panel, panelDefaults);\n\n    this.events.on('data-received', this.onDataReceived);\n    this.events.on('data-snapshot-load', this.onDataReceived);\n    this.events.on('init-edit-mode', this.onInitEditMode);\n    this.events.on('render', this.onRender);\n  }\n\n  onDataReceived = (dataList) => {\n    this.dataList = dataList;\n    this.data = this.transformData(dataList);\n    this.render();\n  }\n\n  onInitEditMode = () => {\n    this.addEditorTab('Options', JsformOptionsEditor, 2);\n    this.unitFormats = kbn.getUnitFormats();\n  }\n\n  onRender = () => {\n    if (!this.dataList) { return; }\n    this.data = this.transformData(this.dataList);\n  }\n\n  onSubmit = () => {\n    this.events.emit('submit');\n  }\n\n  transformData(data) {\n    return null;\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    canvasRendering(scope, elem, attrs, ctrl);\n  }\n\n  updateJsonSchema() {\n    this.events.emit('update-json-schema');\n  }\n}\n"]}